[tool.poetry]
name = "dedlin"
version = "1.19.0"
description = "Line editor, edlin clone with many improvements"
authors = ["Matthew Martin <matthewdeanmartin@gmail.com>"]
keywords = ["editor", "edlin", "line editor",]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
]
include = [
    "dedlin/**/*.py",
    "dedlin/**/*.md",
    "dedlin/**/*.txt",
    "dedlin/**/*.html",
    "dedlin/**/*.jinja",
]
exclude = [
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/matthewdeanmartin/dedlin"
homepage = "https://github.com/matthewdeanmartin/dedlin"
documentation ="https://github.com/matthewdeanmartin/dedlin"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/matthewdeanmartin/dedlin/issues"
"Change Log" = "https://github.com/matthewdeanmartin/dedlin/blob/main/CHANGES.md"

[tool.poetry.scripts]
dedlin = 'dedlin.__main__:main'

[tool.poetry.dependencies]
python = ">=3.11, <4.0"
# ui toolkits
questionary = ">=2.0.1"
pywin32 = { version = ">=228", markers = "sys_platform == 'win32'" }
rich = ">=13.6.0"

# run type checks
icontract = ">=2.6.4"
pydantic = "<2.0.0"

# Natural language support
pyspellchecker = ">=0.7.2"
textstat = ">=0.7.3"

# AI support
openai = ">=1.3.8"
python-dotenv = ">=1.0.0"

# syntax highlighting
pygments = ">=2.16.1"

# cli
docopt-ng = ">=0.9.0"

# browser
html2text = ">=2020.1.16"
requests = ">=2.31.0"

# ascii art/fonts
art = ">=6.1"

# printer support (huge difference with 3+
mistune = "<3.0.0"
markdown-it-py = ">=3.0.0"

# web api
#fastapi = { version = "*", optional = true }
#uvicorn = { version = "*", optional = true }

# Accessibilty
[tool.poetry.extras]
# doesn't build on gitlab actions today (dec 2023)
# pyttsx3 = ">=2.90"
speaking = ["pyttsx3"]

#[tool.poetry.extras]
#webapi = ["fastapi","uvicorn"]

[tool.poetry.dev-dependencies]
mypy = ">=1.6.1"
pytest = ">=7.4.3"
pytest-cov = ">=4.1.0"
hypothesis = {extras = ["cli"], version = ">=6.88.1"}
types-requests = "*"
pre-commit = ">=3.5.0"
proselint = ">=0.13.0"
types-Pygments = "*"

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
junit_family = "xunit1"
norecursedirs = ["vendor", "scripts"]
# don't know how to do this in toml
#addopts = "--strict-markers"
#markers =
#	slow: marks tests as slow (deselect with '-m "not slow"')
#	fast: marks tests as fast (deselect with '-m "not fast"')

[tool.isort]
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["dedlin"]
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.ruff]
line-length = 1000

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = [
    "E722",
    "E501",
]

# Exclude a variety of commonly ignored directories.
exclude = [
    "dead_code",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "hide"
]
per-file-ignores = { }

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"
